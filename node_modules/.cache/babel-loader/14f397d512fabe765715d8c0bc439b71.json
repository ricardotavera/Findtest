{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Findtest.github.io/src/components/pages/Average.js\";\nimport React from 'react';\nimport Popup from './Popup';\nimport ListSubject from './ListSubject';\nimport '../../App.css';\nimport './Average.css';\nimport PopupGrade from './PopupGrade'; // Global variable\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar grade = [];\n\nclass Average extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mySubjects: [],\n      buttonPopup: false,\n      buttonGo: false\n    };\n  }\n\n  deleteSub(key) {// this.setState((state, param)=>{mySubjects: state.mySubjects})\n  }\n\n  calculateAverage(records) {\n    var numerator = 0;\n    var denominator = 0;\n    var finalGrade, collegeState, earnedCredits;\n    const grades = [];\n    const names = [];\n\n    for (let i = 0; i < records.length; i++) {\n      numerator = numerator + records[i].credit * records[i].grade;\n      denominator = denominator + Number(records[i].credit);\n      grades[i] = records[i].grade;\n      names[i] = records[i].name;\n    }\n\n    finalGrade = numerator / denominator;\n\n    if (finalGrade < 2.7) {\n      collegeState = 'PFU';\n      earnedCredits = 0;\n    } else if (finalGrade < 3.2) {\n      collegeState = 'Condicional';\n      earnedCredits = 0;\n    } else if (finalGrade < 3.5) {\n      collegeState = 'Normal';\n      earnedCredits = 2;\n    } else if (finalGrade < 3.8) {\n      collegeState = 'Normal';\n      earnedCredits = 4;\n    } else if (finalGrade < 4.2) {\n      collegeState = 'Normal';\n      earnedCredits = 6;\n    } else {\n      collegeState = 'Normal';\n      earnedCredits = 8;\n    }\n\n    console.log(records.name);\n    return [finalGrade.toFixed(2), collegeState, earnedCredits, names, grades];\n  }\n\n  addSubject(pname, pcredit, pgrade, pkey) {\n    console.log(pkey);\n\n    if (!pkey) {\n      const newSubject = {\n        name: pname,\n        credit: pcredit,\n        grade: pgrade\n      };\n      const temp = [...this.state.mySubjects];\n      temp.unshift(newSubject);\n      let index;\n\n      for (index = 0; index < temp.length; index++) {\n        temp[index].key = index + 1;\n      }\n\n      this.setState({\n        mySubjects: [...temp]\n      });\n    } else {\n      const temp = [...this.state.mySubjects];\n\n      for (let i = 0; i < this.state.mySubjects.length; i++) {\n        if (pkey == temp[i].key) {\n          temp[i].name = pname;\n          temp[i].credit = pcredit;\n          temp[i].grade = pgrade;\n          break;\n        }\n      }\n\n      this.setState({\n        mySubjects: [...temp]\n      });\n    }\n  }\n\n  render() {\n    window.scrollTo(0, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Mi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 31\n              }, this), \"  promedio\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"En esta seccion puede ingresear los datos de las asignaturas cursadas y debe presionar el boton \\\"Agregar\\\". Cuando ya haya agregado todas las asignaturas debera presionar el boton \\\"Calcular Promedio\\\".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              onClick: () => this.setState({\n                buttonPopup: true\n              }),\n              value: \"Agregar\",\n              className: \"add-subject cursor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-subjects\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputSection\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \" register\",\n                children: \"Registro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"tb-subject\",\n                children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Nombre\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Creditos\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Puntaje\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-subjects\",\n                children: /*#__PURE__*/_jsxDEV(ListSubject, {\n                  list: this.state.mySubjects,\n                  modifySub: (p1, p2, p3, p4) => this.addSubject(p1, p2, p3, p4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-go cursor\",\n              onClick: () => {\n                grade = this.calculateAverage(this.state.mySubjects);\n                this.setState({\n                  buttonGo: true\n                });\n              },\n              children: \"CALCULAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Popup, {\n            trigger: this.state.buttonPopup,\n            setTrigger: () => this.setState({\n              buttonPopup: false\n            }),\n            addSub: (p1, p2, p3) => this.addSubject(p1, p2, p3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PopupGrade, {\n            visible: this.state.buttonGo,\n            setTrigger: () => this.setState({\n              buttonGo: false\n            }),\n            grade: grade[0],\n            collegeState: grade[1],\n            earnedCredits: grade[2],\n            subNames: grade[3],\n            subGrades: grade[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Average;","map":{"version":3,"sources":["/home/daniel/Documents/Findtest.github.io/src/components/pages/Average.js"],"names":["React","Popup","ListSubject","PopupGrade","grade","Average","Component","constructor","props","state","mySubjects","buttonPopup","buttonGo","deleteSub","key","calculateAverage","records","numerator","denominator","finalGrade","collegeState","earnedCredits","grades","names","i","length","credit","Number","name","console","log","toFixed","addSubject","pname","pcredit","pgrade","pkey","newSubject","temp","unshift","index","setState","render","window","scrollTo","p1","p2","p3","p4"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Popup from './Popup'\r\nimport ListSubject from './ListSubject'\r\nimport '../../App.css'\r\nimport './Average.css'\r\nimport PopupGrade from './PopupGrade'\r\n\r\n\r\n// Global variable\r\nvar grade = []\r\n\r\nclass Average extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            mySubjects: [],\r\n            buttonPopup: false,\r\n            buttonGo: false\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    \r\n\r\n    deleteSub(key){\r\n       // this.setState((state, param)=>{mySubjects: state.mySubjects})\r\n    }\r\n\r\n    calculateAverage(records){\r\n\r\n        var numerator = 0\r\n        var denominator = 0\r\n        var finalGrade, collegeState, earnedCredits\r\n        const grades = []\r\n        const names = []\r\n\r\n        for(let i=0; i<records.length; i++){\r\n            numerator = numerator + records[i].credit*records[i].grade\r\n            denominator = denominator + Number(records[i].credit)\r\n            grades[i] = records[i].grade\r\n            names[i] = records[i].name\r\n    }\r\n\r\n    finalGrade = numerator/denominator\r\n\r\n    if (finalGrade < 2.7){\r\n        collegeState = 'PFU'\r\n        earnedCredits = 0\r\n    }else if (finalGrade < 3.2){\r\n        collegeState = 'Condicional'\r\n        earnedCredits = 0\r\n    }else if (finalGrade < 3.5){\r\n        collegeState = 'Normal'\r\n        earnedCredits = 2\r\n    }else if (finalGrade < 3.8){\r\n        collegeState = 'Normal'\r\n        earnedCredits = 4\r\n    }else if (finalGrade < 4.2){\r\n        collegeState = 'Normal'\r\n        earnedCredits = 6\r\n    }else{\r\n        collegeState = 'Normal'\r\n        earnedCredits = 8\r\n    }\r\n\r\n\r\n    console.log(records.name)   \r\n    return [finalGrade.toFixed(2), collegeState, earnedCredits, names, grades]\r\n}\r\n\r\n    addSubject(pname, pcredit, pgrade, pkey) {\r\n        console.log(pkey)\r\n        if(!pkey){\r\n        const newSubject = { name: pname, credit: pcredit, grade: pgrade }\r\n        const temp = [...this.state.mySubjects]\r\n        temp.unshift(newSubject)\r\n        let index\r\n        for (index = 0; index < temp.length; index++) {\r\n            temp[index].key = index + 1\r\n        }\r\n\r\n    \r\n        this.setState({ mySubjects: [...temp] })\r\n\r\n    }else{\r\n        const temp = [...this.state.mySubjects]\r\n        for(let i=0; i<this.state.mySubjects.length; i++){\r\n                    if(pkey==temp[i].key){\r\n                        temp[i].name = pname;\r\n                        temp[i].credit = pcredit;\r\n                        temp[i].grade = pgrade;\r\n                        break\r\n                    }  \r\n        }\r\n        this.setState({mySubjects: [...temp]});\r\n    }\r\n        }\r\n\r\n\r\n    render() {\r\n\r\n        window.scrollTo(0, 0)\r\n        return <div >\r\n            <div className='back'>\r\n                <div className='centerDiv'>\r\n                    <div className='left-description'>\r\n                        <h1 > <span> Mi</span>  promedio</h1>\r\n                        <p >En esta seccion puede ingresear los datos de las asignaturas cursadas y debe presionar el boton \"Agregar\". Cuando ya haya agregado\r\n                            todas las asignaturas debera presionar el boton \"Calcular Promedio\".\r\n                        </p>\r\n                        <input type='button' onClick={() => this.setState({ buttonPopup: true })} value='Agregar' className='add-subject cursor' />\r\n\r\n                    </div>\r\n                \r\n                    <div className='preview-subjects'>\r\n                    <div className='inputSection'>\r\n                        <h2 className=' register' >Registro</h2>\r\n                            <table className='tb-subject'>\r\n                                <thead>\r\n                                    <td>Nombre</td>\r\n                                    <td>Creditos</td>\r\n                                    <td>Puntaje</td>\r\n                                </thead>\r\n                            </table>\r\n                        <div className='list-subjects'>\r\n                        <ListSubject list={this.state.mySubjects} modifySub={(p1, p2, p3, p4) => this.addSubject(p1, p2, p3, p4)} />\r\n                        </div> \r\n                    </div>\r\n                        <div className='button-go cursor' onClick={() => {\r\n                            grade = this.calculateAverage(this.state.mySubjects)\r\n                            this.setState({ buttonGo: true})\r\n\r\n                        }\r\n                        }>\r\n                        CALCULAR\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    \r\n                    <Popup trigger={this.state.buttonPopup} setTrigger={() => this.setState({ buttonPopup: false })} addSub={(p1, p2, p3) => this.addSubject(p1, p2, p3)} />\r\n                    <PopupGrade visible={this.state.buttonGo} setTrigger={() => this.setState({ buttonGo: false })} grade={grade[0]} collegeState={grade[1]} earnedCredits={grade[2]} subNames={grade[3]} subGrades={grade[4]}/>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n           \r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Average;\r\n"]},"metadata":{},"sourceType":"module"}